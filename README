This project is a personal exercise in compiler programming. It is a 
work-in-progress. It consists mainly in a compiler for a subset of C.
It targets 32-bit x86 (via GNU assembler).

This 32-bit x86 compiler is tested on FreeBSD, Linux, and Windows (via MinGW).

Please go in the "compiler" directory and read "compiler/docs/docs-x86.txt" 
for more info.

The test programs "compiler/test/x86/*.c" should give an idea of the subset
of C accepted at this point. There are still bugs, especially in stuff not
shown in the tests. Some expressions may not compile properly yet, or compile
at all, for that matter.

-------------------------------------------------------------------------

This compiler can also target my terrible old bytecode VM, arbitrarily 
named "BPF" -- for details, see "README-BPF" and "compiler/docs/docs-bpf.txt"

Note that the BPF compiler supports a much smaller subset of C than does 
the x86 compiler, and it may have some weird modifications.

-------------------------------------------------------------------------

Future project ideas: 

The compiler could be improved, merged with a well-designed VM and 
hacked into a big REPL to create a script interpreter.

Supporting a larger subset of C ? Not sure if it would be possible to
do this by growing this code.

Support for other real architectures than x86, say e.g. powerpc or arm 
(PowerPC does not look easy.)

Support for popular serious VMs like JVM / .NET / LLVM
